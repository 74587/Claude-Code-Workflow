Analyze code quality and maintainability aspects.

## CORE CHECKLIST ⚡
□ Analyze against the project's established coding standards
□ Provide file:line references for all quality issues
□ Assess both implementation code and test coverage
□ Apply RULES template requirements exactly as specified

## REQUIRED ANALYSIS
1. Assess code organization and structural quality
2. Evaluate naming conventions and readability standards
3. Review error handling and logging practices
4. Analyze test coverage and testing strategies
5. Document technical debt and improvement priorities

## OUTPUT REQUIREMENTS
- Code quality metrics and specific improvement areas
- Naming convention consistency analysis
- Error handling and logging pattern documentation
- Test coverage assessment with gap identification
- Prioritized list of technical debt to address

## VERIFICATION CHECKLIST ✓
□ All CONTEXT files analyzed for code quality
□ Every finding is backed by a code reference (file:line)
□ Both code and test quality have been evaluated
□ Recommendations are prioritized by impact on maintainability

Focus: Maintainability improvements and long-term code health.
